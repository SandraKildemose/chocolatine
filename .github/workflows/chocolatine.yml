name: chocolatine
run-name: ${{ github.actor }} choco's check

on:
  push:
    branches-ignore:
      - "ga-ignore-*"
  pull_request:
    branches-ignore:
      - "ga-ignore-*"

env:
  EXECUTABLES: "mysh"
  MIRROR_URL: "git@github.com:SandraKildemose/chocolatine.git"

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    if: github.repository != 'SandraKildemose/chocolatine'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run coding style checker
        run: check.sh /github/workspace /github/workspace

      - name: Annotate coding style errors
        run: |
          input=/github/workspace/coding-style-reports.log
          if [ -f "$input" ]; then
            while IFS= read -r line; do
              file_path=$(echo "$line" | cut -d: -f1)
              line_number=$(echo "$line" | cut -d: -f2)
              level=$(echo "$line" | cut -d: -f3)
              message=$(echo "$line" | cut -d: -f4-)
              echo "::error file=$file_path,line=$line_number,title=$level::${message}"
            done < "$input"
          fi

      - name: Fail if coding style errors found
        run: |
          file=/github/workspace/coding-style-reports.log
          if [ -f "$file" ] && [ "$(wc -l < "$file")" -gt 0 ]; then
            exit 1
          fi

  check_program_compilation:
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker:latest
    needs: check_coding_style
    timeout-minutes: 2
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Compile project
        run: make

      - name: Clean build files
        run: make clean

      - name: Verify executable(s)
        run: |
          for file in ${{ env.EXECUTABLES }}; do
            if [ ! -x "$file" ]; then
              echo "::error file=$file::File does not exist or is not executable"
              exit 1
            fi
          done

  run_tests:
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker:latest
    needs: check_program_compilation
    timeout-minutes: 2
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build and run tests
        run: make tests_run

  push_to_mirror:
    runs-on: ubuntu-latest
    needs: run_tests
    if: github.event_name == 'push' && github.repository != 'SandraKildemose/chocolatine'
    steps:
      - name: Checkout full git history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Push to mirror repository
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ env.MIRROR_URL }}
          ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
