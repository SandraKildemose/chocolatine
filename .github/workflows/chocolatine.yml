name: Chocolatine

on:
  push:
  pull_request:

env:
  MIRROR_URL: git@github.com:epitech/mirror-repo.git
  EXECUTABLES: my_binary

jobs:
  check_conditions:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - name: Check if workflow should run
        id: check
        run: |
          if [[ "${{ github.ref_name }}" == ga-ignore-* ]] || [[ "${{ github.repository }}" == *"${{ env.MIRROR_URL##*/ }}" ]]; then
            echo "should_run=false" >> $GITHUB_OUTPUT
          else
            echo "should_run=true" >> $GITHUB_OUTPUT
          fi

  check_coding_style:
    needs: check_conditions
    if: needs.check_conditions.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run coding style check
        run: check.sh $(pwd) $(pwd)
      - name: Display coding style errors
        run: |
          if [ -s coding-style-reports.log ]; then
            while IFS= read -r line; do
              file=$(echo "$line" | cut -d: -f1)
              line_number=$(echo "$line" | cut -d: -f2)
              message=$(echo "$line" | cut -d: -f3-)
              echo "::error file=$file,line=$line_number::$message"
            done < coding-style-reports.log
            exit 1
          fi

  check_program_compilation:
    needs: check_coding_style
    if: needs.check_conditions.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run make
        timeout-minutes: 2
        run: make
      - name: Run make clean
        run: make clean
      - name: Check executables
        run: |
          IFS=',' read -ra files <<< "$EXECUTABLES"
          for file in "${files[@]}"; do
            if [[ ! -x "$file" ]]; then
              echo "::error file=$file::Executable $file is missing or not executable"
              exit 1
            fi
          done

  run_tests:
    needs: check_program_compilation
    if: needs.check_conditions.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run tests
        timeout-minutes: 2
        run: make tests_run

  push_to_mirror:
    if: github.event_name == 'push' && needs.check_conditions.outputs.should_run == 'true'
    needs: run_tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Mirror to ${{ env.MIRROR_URL }}
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ env.MIRROR_URL }}
          ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
