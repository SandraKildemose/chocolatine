name: chocolatine

on:
  push:
    branches-ignore:
      - "ga-ignore-*"
  pull_request:
    branches-ignore:
      - "ga-ignore-*"

env:
  EXECUTABLES: "directory2/executableB"
  MIRROR_URL: "git@github.com:EpitechPGEPromo2029/B-DOP-200-PAR-2-1-chocolatine-sandra.kildemose-jorgensen.git"

jobs:
  check_conditions:
    name: Check if should run
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.result }}
    steps:
      - name: Check repository
        id: check
        run: |
          if [[ "$GITHUB_REPOSITORY" == *"EpitechPGEPromo2029"* ]]; then
            echo "result=false" >> $GITHUB_OUTPUT
          else
            echo "result=true" >> $GITHUB_OUTPUT
          fi

  check_coding_style:
    name: Check coding style
    needs: check_conditions
    if: needs.check_conditions.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run coding-style check
        run: check.sh $(pwd) $(pwd)

      - name: Annotate coding-style errors
        run: |
          if [ -f /tmp/coding-style-reports.log ]; then
            while IFS= read -r line; do
              file=$(echo "$line" | cut -d: -f1)
              line_nb=$(echo "$line" | cut -d: -f2)
              type=$(echo "$line" | cut -d: -f3)
              msg=$(echo "$line" | cut -d: -f4-)
              echo "::error file=$file,line=$line_nb,title=$type::${msg}"
            done < /tmp/coding-style-reports.log
          fi

      - name: Fail on coding-style errors
        run: |
          if [ -s /tmp/coding-style-reports.log ]; then
            exit 1
          fi

  check_program_compilation:
    name: Check program compilation
    needs: check_coding_style
    if: needs.check_conditions.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker:latest
    timeout-minutes: 2
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run make
        run: make

      - name: Run make clean
        run: make clean

      - name: Check executables
        run: |
          echo "$EXECUTABLES" | tr ',' '\n' | while read -r file; do
            if [ ! -x "$file" ]; then
              echo "::error file=$file::Missing or not executable: $file"
              exit 1
            fi
          done

  run_tests:
    name: Run tests
    needs: check_program_compilation
    if: needs.check_conditions.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker:latest
    timeout-minutes: 2
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run tests
        run: make tests_run

  push_to_mirror:
    name: Push to mirror
    needs: run_tests
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Mirror repository
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ env.MIRROR_URL }}
          ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}

          
