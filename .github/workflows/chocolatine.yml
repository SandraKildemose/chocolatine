name: Chocolatine Workflow

on:
  push:
    branches-ignore:
      - ga-ignore-*
  pull_request:
    branches-ignore:
      - ga-ignore-*

jobs:

  check_coding_style:
    name: Check Coding Style
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Coding Style Checker
        run: check.sh $(pwd) $(pwd)

      - name: Process Coding Style Report
        run: |
          if [ -f coding-style-reports.log ]; then
            while IFS=: read -r file line column message; do
              echo "::error file=$file,line=$line,col=$column::$message"
            done < coding-style-reports.log
            exit 1
          fi

  check_program_compilation:
    name: Check Program Compilation
    runs-on: ubuntu-latest
    needs: check_coding_style
    container: epitechcontent/epitest-docker
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Compile the Project
        run: timeout 120 make

      - name: Clean the Project
        run: make clean

      - name: Verify Executables
        env:
          EXECUTABLES: "my_executable,another_executable"
        run: |
          IFS=',' read -ra FILES <<< "$EXECUTABLES"
          for file in "${FILES[@]}"; do
            if [ ! -x "$file" ]; then
              echo "::error file=$file::Executable not found or not executable!"
              exit 1
            fi
          done

  run_tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: check_program_compilation
    container: epitechcontent/epitest-docker
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Tests
        run: timeout 120 make tests_run

  push_to_mirror:
    name: Push to Mirror
    runs-on: ubuntu-latest
    needs: run_tests
    env:
      MIRROR_URL: ${{ secrets.MIRROR_URL }}
    if: github.event_name == 'push' && github.repository != github.actor + '/' + github.event.repository.name
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Mirror Repository
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ secrets.MIRROR_URL }}
          ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
